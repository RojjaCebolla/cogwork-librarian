/* global */

:root {
  --dark-color: hsl(25, 32%, 27%);
  --darker-color: hsl(25, 32%, 20%);
  --darker-color-subdued: hsl(24, 20%, 20%);
  --darkest-color: hsl(25, 31%, 12%);
  --light-color: hsl(19, 41%, 88%);
  --gray-68: hsl(0, 0%, 27%);
  --gray-68-shadow: hsla(0, 0%, 27%, 0.5);
  --gray-42: hsl(0, 0%, 50%);
  --blue: hsla(180, 100%, 69%, 100%);
  --blue-low-alpha: hsla(180, 100%, 69%, 50%);
  --blue-mid-alpha: hsla(180, 100%, 69%, 75%);
  --green: hsl(96, 100%, 69%);
  --light-red: hsl(0, 100%, 55%);
  --red: hsl(0, 100%, 37%);
  --card-radius: 4.75% / 3.5%;

  --spacing-100: 2px;
  --spacing-200: 4px;
  --spacing-300: 8px;
  --spacing-400: 16px;

  background-color: var(--dark-color);
  color: var(--light-color);

  --monospace-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace;
  --coglib-width: 50%;
  --coglib-closed-width: 2.5%;
}

a {
  color: var(--light-color);
}

body {
  margin: 0;
}

*:focus-visible {
  outline: 2px inset var(--blue);
}

button {
  background-color: var(--dark-color);
  border-top-color: var(--gray-42);
  border-left-color: var(--gray-42);
  border-bottom-color: var(--dark-color);
  border-right-color: var(--dark-color);
  color: var(--blue-mid-alpha);
}

button:disabled {
  background-color: var(--darker-color);
  color: var(--blue-low-alpha);
}

input {
  color: var(--blue);
  background: var(--darker-color);
  font-family: var(--monospace-family);
  border: none;
}
input::placeholder {
  color: var(--blue-mid-alpha);
}

fieldset {
  margin-left: 0;
  padding-left: unset;
  padding-right: unset;
  margin-top: 4px;
  border: none;
}

h1,
h2,
h3 {
  margin-top: 0.5em;
  margin-bottom: 0.5em;
}

p {
  margin-top: 0.5em;
  margin-bottom: 0.5em;
}

/* classnames */

@media (min-width: 769px) {
  .root {
    flex-direction: column;
    height: 100vh;
    overflow-x: hidden;
    display: flex;
  }

  .void {
    flex: 1;
    background-color: var(--darker-color);
  }

  .void .coglib-icon {
    margin: var(--spacing-200);
  }
}

.cogwork-librarian {
  position: absolute;
  top: 0;
  z-index: 5;
  width: var(--coglib-width);
  transition-property: left, background-color;
  transition-delay: 25ms;
  transition-duration: 200ms;
  transition-timing-function: ease-in-out;
}

@media (min-width: 769px) and (max-width: 1024px) {
  .cogwork-librarian.show {
    width: 66%;
  }
}

@media (max-width: 768px) {
  .cogwork-librarian {
    position: static;
    width: 100%;
  }
  .cogwork-librarian.hide {
    left: 0;
  }
}

.cogwork-librarian.show {
  left: 0;
  background-color: var(--dark-color);
  box-shadow: 2px 2px 4px 0 var(--gray-68-shadow);
}

.cogwork-librarian.hide {
  left: calc(0px - var(--coglib-width));
  background-color: transparent;
  /*width: var(--coglib-width);*/
}

.cogwork-librarian.show.examples,
.cogwork-librarian.show.about-me,
.cogwork-librarian.show.user-guide,
.cogwork-librarian.show.data {
  width: 100%;
}

.column {
  display: flex;
  flex-direction: column;
}

.row {
  display: flex;
  flex-direction: row;
  align-items: center;
}

.row > :not(dialog):not(:first-child)  {
  margin-left: 4px;
}
.column > :not(dialog):not(:first-child)  {
  margin-top: 4px;
}

.masthead {
  margin: var(--spacing-200);
  align-items: start;
}

.masthead .page-title {
  margin-left: var(--spacing-200);
  margin-top: 0;
  margin-bottom: 0;
}

.data-view-root .input-link input {
 appearance: none;
  outline: none;
  margin: 0;
}

.data-view-root .input-link,
.masthead a {
  color: var(--blue-mid-alpha);
  text-decoration: none;
  padding: var(--spacing-100) var(--spacing-200);
  transition-property: color, background-color;
  transition-duration: 100ms;
  transition-timing-function: ease-out;
  border-radius: 2px;
}

.data-view-root .input-link.active-link,
.data-view-root .input-link:focus-visible,
.data-view-root .input-link:hover,
.masthead a.active-link,
.masthead a:focus-visible,
.masthead a:hover {
  color: var(--dark-color);
  background-color: var(--blue);
  border-color: var(--blue-mid-alpha) inset;
}

.cogwork-librarian.hide .masthead .toggle {
  margin-right: 0;
}
.masthead .toggle {
  position: absolute;
  top: var(--spacing-200);
  right: var(--spacing-200);
}

.coglib-prism-theme {
  /* copies prism theme */
  font-family: var(--monospace-family);
  font-size: 1em;
  text-align: left;
  white-space: pre;
  word-spacing: normal;
  word-break: normal;
  word-wrap: normal;
  line-height: 1.5;
  padding: 1em;
  margin: 0.5em 0;
  overflow: auto;
  border: none;
}

.search-root {
  display: flex;
  flex-direction: column;
  margin: var(--spacing-300);
}

.example-query {
  display: flex;
  flex-direction: row;
  /*align-items: center;*/
}

.example-query > :last-child {
  flex: 1;
}

.example-content {
  margin: var(--spacing-300);
}
.example-content button {
  height: unset;
}

.search-root input {
  box-sizing: border-box;
  caret-color: var(--blue);
}

.query-editor {
  margin-top: var(--spacing-200);
  margin-bottom: var(--spacing-200);
  height: max-content;
  display: grid;
  grid-template-columns: auto auto 1fr;
  grid-template-rows: 1fr;
  grid-template-areas: 'labels brown overlap';
}

.query-editor pre, .query-editor textarea {
  margin-top: 0;
  margin-bottom: 0;
}

.query-editor .labels {
  grid-area: labels;
  z-index: 4;
  display: flex;
  flex-direction: column;
  cursor: default;
  padding-right: 0;
}

.query-editor .labels .base {
  background-color: var(--darkest-color);
}

.query-editor .labels .multi-code {
  white-space: pre;
}
.query-editor .run-query-button {
  background-color: transparent;
  border: 0;
  padding: 0;
  margin: 0;
  cursor: pointer;
}
.query-editor .run-query-button:disabled {
  cursor: unset;
}

.query-editor:focus-within * {
  outline: none;
}
.query-editor:focus-within {
  outline: 2px inset var(--blue);
}

.query-editor .links {
  grid-area: overlap;
  box-sizing: border-box;
  display: inline-block;
  background: transparent;
}
.query-editor .links :not(a) {
  color: transparent;
  background: transparent;
}
.query-editor .links.show {
  z-index: 4;
}
.query-editor .links.hide {
  z-index: 1;
}

.query-editor .controller {
  caret-color: var(--blue);
  color: transparent;
  background-color: transparent;
  resize: none;
  grid-area: overlap;
  z-index: 3;
  box-sizing: border-box;
  overflow: auto;
  scrollbar-color: var(--blue-mid-alpha) var(--dark-color);
}
.query-editor input.controller {
  padding-right: 0;
  scrollbar-width: revert;
}

.query-editor .controller::selection,
.search-root input::selection {
  background-color: var(--blue-low-alpha);
}

.query-editor .controller::placeholder {
  color: var(--blue-mid-alpha);
}

.query-editor .display {
  z-index: 2;
  box-sizing: border-box;
  display: inline-block;
  grid-area: overlap;
}
.query-editor .display a {
  text-decoration: none;
}

.execute-controls {
 flex-wrap: wrap;
}
.execute-controls > * {
  margin-bottom: var(--spacing-200);
}

.scour-button-holder {
  display:flex;
  flex-direction: column;
}

.source-option {
  border: var(--dark-color) inset 2px;
  padding: var(--spacing-200);
}

.source-option .radio-button-holder {
  display: grid;
  grid-template-columns: 1fr;
  grid-template-rows: 1fr;
  grid-template-areas: 'overlap';
}
.source-option .radio-button-holder input[type='radio'] {
  opacity: 0;
  grid-area: overlap;
  z-index: 2;
  width: 100%;
  height: 100%;
}
.source-option .radio-button-holder svg {
  grid-area: overlap;
  z-index: 1;
}

.source-option.selected {
  border: var(--blue) inset 2px;
  background-color: var(--blue);
  color: var(--dark-color);
}
.source-option .db-settings {
  margin-left: var(--spacing-200);
}

.expander {
  background-color: inherit;
}

.expander-action {
  background-color: var(--light-color);
  color: var(--dark-color);
  border-color: var(--light-color);
}

.expander-child {
  margin: var(--spacing-200);
}

.alert {
  color: var(--light-red);
  font-weight: bold;
}

.cube-import ul {
  margin-top: 0;
  margin-bottom: 0;
}
.cube-import .submit {
  margin-top: var(--spacing-200);
}

.db-import {
  height: 350px;
  align-items: flex-start;
}
.db-import > * {
  flex: 1;
}

.db-import .scryfall-option {
  padding: var(--spacing-200);
}

.db-import .scryfall-option .size {
  margin-left: var(--spacing-200);
}

.db-import .file {
  width: 100%;
  height: 100%;
  display: grid;
  grid-template-columns: 1fr;
  grid-template-rows: 1fr;
  grid-template-areas: 'overlap';
  border: var(--blue-mid-alpha) 2px inset;
}
.db-import .file input {
  opacity: 0;
  width: 100%;
  height: 100%;
  z-index: 2;
  display: inline-block;
  grid-area: overlap;
  cursor: pointer;
}
.db-import .file label {
  width: 100%;
  height: 100%;
  z-index: 1;
  display: inline-block;
  grid-area: overlap;
  background: var(--blue);
  color: var(--dark-color);
  text-align: center;
  align-items: center;
  justify-content: center;
}

.list-import, .file-import {
  display: flex;
  flex-direction: column;
}

.cards-to-import {
  background: var(--darker-color);
  color: #ccc;
  resize: none;
}

.cards-to-import::placeholder {
  color: var(--blue-mid-alpha);
}

.results {
  background-color: var(--dark-color);
  color: var(--light-color);
  display: flex;
  flex-direction: row;
  flex: 1;
}

.results .content {
  flex: 1;
}

.result-container {
  padding-top: var(--spacing-300);
  background-color: var(--darker-color);
  display: flex;
  flex-wrap: wrap;
  flex-direction: row;
  justify-content: start;
  align-content: flex-start;
}

.bottom-page-control {
  align-self: end;
}

.detail-controls {
  margin-left: 20px;
}

.loader-holder {
  width: 500px;
}

.loader .background {
  fill: var(--light-color);
}

.loader .foreground {
  fill: var(--green);
}
